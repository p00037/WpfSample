<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:AR="clr-namespace:GrapeCity.ActiveReports.Viewer.Wpf;assembly=GrapeCity.ActiveReports.Viewer.Wpf.v12"
    xmlns:Converters="clr-namespace:GrapeCity.ActiveReports.Converters;assembly=GrapeCity.ActiveReports.Viewer.Wpf.v12"
    xmlns:Framework="clr-namespace:GrapeCity.ActiveReports.Framework;assembly=GrapeCity.ActiveReports.Viewer.Wpf.v12"
    xmlns:MultiPage="clr-namespace:GrapeCity.ActiveReports.Viewer.Wpf.View.MultiPage;assembly=GrapeCity.ActiveReports.Viewer.Wpf.v12"
    xmlns:AcReportBase="clr-namespace:AcReportBase"
    xmlns:View="clr-namespace:GrapeCity.ActiveReports.Viewer.Wpf.View;assembly=GrapeCity.ActiveReports.Viewer.Wpf.v12"
    xmlns:ViewModel="clr-namespace:GrapeCity.ActiveReports.ViewModel;assembly=GrapeCity.ActiveReports.Viewer.Wpf.v12"
    xmlns:converters2="clr-namespace:GrapeCity.ActiveReports.Framework.Converters;assembly=GrapeCity.ActiveReports.Viewer.Wpf.v12"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:fwi="clr-namespace:GrapeCity.ActiveReports.Framework.Implementation;assembly=GrapeCity.ActiveReports.Viewer.Wpf.v12"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:toolkit="clr-namespace:GrapeCity.ActiveReports.Viewer.Wpf.Framework.Toolkit;assembly=GrapeCity.ActiveReports.Viewer.Wpf.v12">

    <AcReportBase:PdfCommand x:Key="PdfCommand" />

    <BitmapImage x:Key="PdfIcon" UriSource="./Resources/pdfIcon.png" />

    <Style TargetType="AR:Viewer">
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="AR:Viewer">
                    <Grid>
                        <Grid.Resources>
                            <AR:LocalResources x:Key="res" />
                            <!--  common settings  -->
                            <!--  TODO extract common settings to separate XAML with dictionary  -->
                            <Style x:Key="ViewerControlBorder" TargetType="Border">
                                <Setter Property="BorderThickness" Value="1" />
                                <Setter Property="CornerRadius" Value="2" />
                                <Setter Property="BorderBrush" Value="{x:Static SystemColors.ControlBrush}" />
                                <Setter Property="Padding" Value="0" />
                                <Setter Property="Margin" Value="0,0,0,3" />
                            </Style>
                            <!--  value converters  -->
                            <ViewModel:VisibilityConverter x:Key="VisibilityConverter" />
                            <Converters:ResourceImageConverter x:Key="ResourceImageConverter" />
                            <Converters:WaitToCursorConverter x:Key="WaitToCursorConverter" />
                        </Grid.Resources>
                        <Border
                            x:Name="ViewerBorder"
                            Cursor="{Binding ShowWaitMessage, Converter={StaticResource WaitToCursorConverter}}"
                            Style="{StaticResource ViewerControlBorder}">
                            <Grid>
                                <DockPanel>
                                    <!--  main toolbar  -->
                                    <View:MainToolbar
                                        x:Name="Toolbar"
                                        DataContext="{Binding Toolbar}"
                                        DockPanel.Dock="Top" />
                                    <!--  sidebar  -->
                                    <TabControl
                                        x:Name="Sidebar"
                                        Width="{Binding SidebarWidth, Mode=TwoWay}"
                                        MinWidth="200"
                                        AutomationProperties.AutomationId="SidebarTab"
                                        BorderThickness="0"
                                        DockPanel.Dock="Left"
                                        SelectedIndex="{Binding Sidebar.ActiveTabIndex, Mode=TwoWay}"
                                        TabStripPlacement="Bottom"
                                        Visibility="{Binding SidebarCollapsed, Mode=OneWay, Converter={StaticResource VisibilityConverter}, ConverterParameter=Collapsed}">
                                        <TabControl.Resources>
                                            <Style TargetType="TabItem">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="TabItem">
                                                            <Border
                                                                x:Name="Border"
                                                                Margin="0,3,7,0"
                                                                BorderBrush="Transparent"
                                                                BorderThickness="1,1,1,1">
                                                                <ContentPresenter
                                                                    x:Name="ContentSite"
                                                                    Margin="2,2,2,2"
                                                                    HorizontalAlignment="Center"
                                                                    VerticalAlignment="Center"
                                                                    ContentSource="Header"
                                                                    RecognizesAccessKey="True" />
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsSelected" Value="True">
                                                                    <Setter Property="Panel.ZIndex" Value="100" />
                                                                    <Setter TargetName="Border" Property="BorderBrush" Value="CornflowerBlue" />
                                                                </Trigger>
                                                                <Trigger SourceName="ContentSite" Property="IsMouseOver" Value="True">
                                                                    <Setter TargetName="Border" Property="Background" Value="LightBlue" />
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                            <Style x:Key="TabButtonImage" TargetType="Image">
                                                <Setter Property="HorizontalAlignment" Value="Center" />
                                                <Setter Property="VerticalAlignment" Value="Center" />
                                                <Setter Property="Width" Value="16" />
                                                <Setter Property="Height" Value="16" />
                                                <Setter Property="FlowDirection" Value="LeftToRight" />
                                                <Setter Property="RenderOptions.BitmapScalingMode" Value="Fant" />
                                            </Style>
                                            <Style TargetType="GroupBox">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="GroupBox">
                                                            <Grid>
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition Height="Auto" />
                                                                    <RowDefinition Height="*" />
                                                                </Grid.RowDefinitions>
                                                                <Label Background="#25A0DA" Foreground="Black">
                                                                    <ContentPresenter ContentSource="Header" />
                                                                </Label>
                                                                <ContentPresenter Grid.Row="1" />
                                                            </Grid>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </TabControl.Resources>
                                        <!--  thumbnails tab  -->
                                        <TabItem IsEnabled="{Binding Sidebar.ThumbnailPanelEnabled}" Visibility="{Binding Sidebar.ThumbnailPanelVisible, Converter={StaticResource VisibilityConverter}}">
                                            <GroupBox AutomationProperties.AutomationId="PageThumbnailsTab" Header="{Binding Sidebar.ThumbnailsPane.Text}">
                                                <View:ThumbnailPanel
                                                    x:Name="ThumbnailPanel"
                                                    Grid.Row="1"
                                                    DataContext="{Binding Sidebar.ThumbnailsPane}" />
                                            </GroupBox>
                                            <TabItem.Header>
                                                <Image
                                                    AutomationProperties.AutomationId="ThumbnailsTabIconButton"
                                                    Source="{Binding Source={StaticResource res}, Converter={StaticResource ResourceImageConverter}, Path=Resources.ThumbnailsPanel}"
                                                    Style="{StaticResource TabButtonImage}"
                                                    ToolTip="{Binding Source={StaticResource res}, Path=Resources.ThumbnailsPanel_ToolTip}" />
                                            </TabItem.Header>
                                        </TabItem>
                                        <!--  TOC tab  -->
                                        <TabItem IsEnabled="{Binding Sidebar.TocPanelEnabled}" Visibility="{Binding Sidebar.TocPanelVisible, Converter={StaticResource VisibilityConverter}}">
                                            <GroupBox AutomationProperties.AutomationId="TOCTab" Header="{Binding Sidebar.Toc.Text}">
                                                <View:TocPanel
                                                    x:Name="TocPanel"
                                                    Grid.Row="1"
                                                    DataContext="{Binding Sidebar.Toc}" />
                                            </GroupBox>
                                            <TabItem.Header>
                                                <Image
                                                    AutomationProperties.AutomationId="TOCTabIconButton"
                                                    Source="{Binding Source={StaticResource res}, Converter={StaticResource ResourceImageConverter}, Path=Resources.Bookmarpanel}"
                                                    Style="{StaticResource TabButtonImage}"
                                                    ToolTip="{Binding Source={StaticResource res}, Path=Resources.DocumentMapPanel_ToolTip}" />
                                            </TabItem.Header>
                                        </TabItem>
                                        <!--  search tab  -->
                                        <TabItem IsEnabled="{Binding Sidebar.SearchPanelEnabled}" Visibility="{Binding Sidebar.SearchPanelVisible, Converter={StaticResource VisibilityConverter}}">
                                            <GroupBox AutomationProperties.AutomationId="SearchResultsTab" Header="{Binding Sidebar.SearchPane.Text}">
                                                <View:SearchPanel Grid.Row="1" DataContext="{Binding Sidebar.SearchPane}" />
                                            </GroupBox>
                                            <TabItem.Header>
                                                <Image
                                                    AutomationProperties.AutomationId="SearchResultsTabIconButton"
                                                    Source="{Binding Source={StaticResource res}, Converter={StaticResource ResourceImageConverter}, Path=Resources.FindResultsPanel}"
                                                    Style="{StaticResource TabButtonImage}"
                                                    ToolTip="{Binding Source={StaticResource res}, Path=Resources.SearchPanel_ToolTip}" />
                                            </TabItem.Header>
                                        </TabItem>
                                        <!--  Parameters tab  -->
                                        <TabItem IsEnabled="{Binding Sidebar.ParamsPanelEnabled}" Visibility="{Binding Sidebar.ParamsPanelVisible, Converter={StaticResource VisibilityConverter}}">
                                            <GroupBox AutomationProperties.AutomationId="ParametersTab" Header="{Binding Sidebar.ParamsViewModel.Text}">
                                                <View:ParametersPanel DataContext="{Binding Sidebar.ParamsViewModel}" />
                                            </GroupBox>
                                            <TabItem.Header>
                                                <Image
                                                    AutomationProperties.AutomationId="ParametersTabIconButton"
                                                    Source="{Binding Source={StaticResource res}, Converter={StaticResource ResourceImageConverter}, Path=Resources.ParameterPanel}"
                                                    Style="{StaticResource TabButtonImage}"
                                                    ToolTip="{Binding Source={StaticResource res}, Path=Resources.ParametersPanel_ToolTip}" />
                                            </TabItem.Header>
                                        </TabItem>
                                    </TabControl>
                                    <!--  ... with its splitter  -->
                                    <View:DockSplitter Visibility="{Binding SidebarCollapsed, Mode=OneWay, Converter={StaticResource VisibilityConverter}, ConverterParameter=Collapsed}" />
                                    <!--  sliding error pane  -->
                                    <View:ErrorPanel DataContext="{Binding ErrorPane}" DockPanel.Dock="Top" />
                                    <Grid x:Name="ReportGrid" Row="2">
                                        <Grid.RowDefinitions>
                                            <RowDefinition x:Name="SecondaryViewRow" Height="0" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                        </Grid.RowDefinitions>
                                        <!--  report view  -->
                                        <View:ReportViewer
                                            x:Name="SecondaryView"
                                            Grid.Row="0"
                                            DataContext="{Binding SecondaryReportPane}" />
                                        <View:LoadingReportBanner Grid.Row="0" Visibility="{Binding ShowWaitMessage, Mode=OneWay, Converter={StaticResource VisibilityConverter}}" />
                                        <GridSplitter
                                            x:Name="ViewSplitter"
                                            Grid.Row="1"
                                            Height="4"
                                            HorizontalAlignment="Stretch"
                                            ResizeBehavior="PreviousAndNext"
                                            ResizeDirection="Rows" />
                                        <View:ReportViewer
                                            x:Name="PrimaryView"
                                            Grid.Row="2"
                                            DataContext="{Binding PrimaryReportPane}" />
                                        <View:LoadingReportBanner Grid.Row="2" Visibility="{Binding ShowWaitMessage, Mode=OneWay, Converter={StaticResource VisibilityConverter}}" />
                                    </Grid>
                                    <!--  floating message please wait  -->
                                </DockPanel>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="View:DockSplitter">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="View:DockSplitter">
                    <UserControl>
                        <Grid x:Name="LayoutRoot" Background="{x:Static SystemColors.ControlBrush}">
                            <Line
                                Name="VLine"
                                Width="1"
                                Height="10"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                AutomationProperties.AutomationId="VerticalDockSplitterLine"
                                Stroke="Black"
                                X1="0"
                                X2="0"
                                Y2="10" />
                            <Line
                                Name="HLine"
                                Width="10"
                                Height="1"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                AutomationProperties.AutomationId="HorisontalDockSplitterLine"
                                Stroke="Black"
                                X1="0"
                                X2="10"
                                Y2="0" />
                        </Grid>
                    </UserControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="View:ErrorPanel">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="View:ErrorPanel">
                    <Grid>
                        <Grid.Resources>
                            <!--  globals  -->
                            <AR:LocalResources x:Key="res" />
                            <Converters:ResourceImageConverter x:Key="ResourceImageConverter" />
                            <Converters:ErrorInfoIconConverter x:Key="ErrorInfoIconConverter" />
                            <converters2:ExceptionInfoConverter x:Key="ExceptionInfoConverter" />
                            <converters2:ExceptionDetailsConverter x:Key="ExceptionDetailsConverter" />
                            <Converters:CommandConverter x:Key="CommandConverter" />
                            <Converters:ErrorInfoCollectionConverter x:Key="ErrorInfoCollectionConverter" />
                            <ViewModel:VisibilityConverter x:Key="VisibilityConverter" />
                            <!--  sliding panels  -->
                            <Style x:Key="SlidingPanelBorder" TargetType="Border">
                                <Setter Property="BorderThickness" Value="1" />
                                <Setter Property="CornerRadius" Value="2" />
                                <Setter Property="Background" Value="LightGray" />
                                <Setter Property="BorderBrush" Value="DarkGray" />
                                <Setter Property="Padding" Value="3" />
                            </Style>
                            <Style x:Key="SlidingPanelButton" TargetType="ButtonBase">
                                <Setter Property="Margin" Value="4,0" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                            </Style>
                            <!--  sliding panels  -->
                            <Style x:Key="CloseButton" TargetType="Button">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <Button
                                                Height="22"
                                                Margin="0"
                                                Padding="0"
                                                VerticalAlignment="Center"
                                                Command="{TemplateBinding Command}">
                                                <Border
                                                    MaxWidth="14"
                                                    Margin="4,0"
                                                    CornerRadius="1">
                                                    <Image
                                                        RenderOptions.BitmapScalingMode="Fant"
                                                        Source="{Binding Source={StaticResource res}, Converter={StaticResource ResourceImageConverter}, Path=Resources.closeerror}"
                                                        Stretch="None" />
                                                </Border>
                                            </Button>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            <Style x:Key="ErrorMessageView" TargetType="ScrollViewer">
                                <Setter Property="HorizontalScrollBarVisibility" Value="Auto" />
                                <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
                                <Setter Property="BorderThickness" Value="1" />
                                <Setter Property="BorderBrush" Value="DarkGray" />
                                <Setter Property="Background" Value="White" />
                            </Style>
                            <Style x:Key="ErrorMessageTreeView" TargetType="TreeView">
                                <Setter Property="BorderThickness" Value="0" />
                                <Setter Property="Margin" Value="0" />
                                <Setter Property="Padding" Value="0" />
                                <Setter Property="Background" Value="White" />
                            </Style>
                            <Converters:CommandAdapter x:Key="HideDialog" Command="{Binding HideDialog}" />
                        </Grid.Resources>
                        <Grid.InputBindings>
                            <KeyBinding Key="Escape" Command="{StaticResource HideDialog}" />
                        </Grid.InputBindings>
                        <Border
                            DockPanel.Dock="Top"
                            Style="{StaticResource SlidingPanelBorder}"
                            Visibility="{Binding IsPanelVisible, Converter={StaticResource VisibilityConverter}}">
                            <Border.Resources>
                                <AR:LocalResources x:Key="res" />
                                <Converters:ResourceImageConverter x:Key="ResourceImageConverter" />
                            </Border.Resources>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <DockPanel Grid.Row="0">
                                    <Image
                                        Height="16"
                                        Margin="4,0"
                                        DockPanel.Dock="Left"
                                        RenderOptions.BitmapScalingMode="Fant"
                                        Source="{Binding Source={StaticResource res}, Converter={StaticResource ResourceImageConverter}, Path=Resources.Attention}"
                                        Stretch="None" />
                                    <Button
                                        AutomationProperties.AutomationId="HideErrorPanelButton"
                                        Command="{Binding HidePanel, Converter={StaticResource CommandConverter}}"
                                        DockPanel.Dock="Right"
                                        Style="{StaticResource CloseButton}" />
                                    <Button
                                        AutomationProperties.AutomationId="ShowDetailsErrorPanelButton"
                                        Command="{Binding ShowDialog, Converter={StaticResource CommandConverter}}"
                                        Content="{Binding Source={StaticResource res}, Path=Resources.ErrorPanel_ShowDetailsButton}"
                                        DockPanel.Dock="Right"
                                        Style="{StaticResource SlidingPanelButton}"
                                        Visibility="{Binding IsDialogVisibleInvert, Converter={StaticResource VisibilityConverter}}" />
                                    <Button
                                        x:Name="HideDetailsButton"
                                        AutomationProperties.AutomationId="HideDetailsErrorPanelButton"
                                        Command="{Binding HideDialog, Converter={StaticResource CommandConverter}}"
                                        Content="{Binding Source={StaticResource res}, Path=Resources.ErrorPanel_HideDetailsButton}"
                                        DockPanel.Dock="Right"
                                        Style="{StaticResource SlidingPanelButton}"
                                        Visibility="{Binding IsDialogVisible, Converter={StaticResource VisibilityConverter}}" />
                                    <TextBlock
                                        VerticalAlignment="Center"
                                        AutomationProperties.AutomationId="ErrorMessageTextErrorPanel"
                                        Text="{Binding MessageText}"
                                        TextTrimming="WordEllipsis"
                                        TextWrapping="NoWrap" />
                                </DockPanel>
                                <Border
                                    Grid.Row="1"
                                    Height="200"
                                    Style="{StaticResource SlidingPanelBorder}"
                                    Visibility="{Binding IsDialogVisible, Converter={StaticResource VisibilityConverter}}">
                                    <DockPanel>
                                        <StackPanel
                                            HorizontalAlignment="Right"
                                            DockPanel.Dock="Bottom"
                                            Orientation="Horizontal">
                                            <Button
                                                Grid.Column="1"
                                                Margin="4"
                                                Padding="30,2"
                                                AutomationProperties.AutomationId="ClearAllErrorPanelButton"
                                                Command="{Binding ClearErrors, Converter={StaticResource CommandConverter}}"
                                                Content="{Binding Source={StaticResource res}, Path=Resources.ErrorPanel_ClearAllButton}" />
                                            <Button
                                                Grid.Column="1"
                                                Margin="4"
                                                Padding="10,2"
                                                AutomationProperties.AutomationId="CopyErrorPanelButton"
                                                Command="{Binding Copy, Converter={StaticResource CommandConverter}}"
                                                Content="{Binding Source={StaticResource res}, Path=Resources.ErrorPanel_CopyButton}" />
                                        </StackPanel>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="200" />
                                                <ColumnDefinition Width="Auto " />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <ScrollViewer Grid.Column="0" Style="{StaticResource ErrorMessageView}">
                                                <TreeView
                                                    x:Name="ErrorsTree"
                                                    ItemsSource="{Binding Errors, Converter={StaticResource ErrorInfoCollectionConverter}}"
                                                    Style="{StaticResource ErrorMessageTreeView}">
                                                    <TreeView.ItemTemplate>
                                                        <HierarchicalDataTemplate ItemsSource="{Binding Exception}">
                                                            <StackPanel Orientation="Horizontal">
                                                                <Image
                                                                    Margin="0,0,6,0"
                                                                    HorizontalAlignment="Left"
                                                                    RenderOptions.BitmapScalingMode="Fant"
                                                                    Source="{Binding Severity, Converter={StaticResource ErrorInfoIconConverter}}" />
                                                                <TextBlock Text="{Binding Exception, Converter={StaticResource ExceptionInfoConverter}}" />
                                                            </StackPanel>
                                                        </HierarchicalDataTemplate>
                                                    </TreeView.ItemTemplate>
                                                </TreeView>
                                            </ScrollViewer>
                                            <GridSplitter
                                                Grid.Column="1"
                                                Width="3"
                                                Height="Auto"
                                                HorizontalAlignment="Stretch"
                                                VerticalAlignment="Stretch"
                                                ResizeDirection="Columns" />
                                            <ScrollViewer
                                                x:Name="ExtendedInfoView"
                                                Grid.Column="2"
                                                Style="{StaticResource ErrorMessageView}">
                                                <TextBlock Text="{Binding ElementName=ErrorsTree, Path=SelectedItem.Exception, Converter={StaticResource ExceptionDetailsConverter}}" />
                                            </ScrollViewer>
                                        </Grid>
                                    </DockPanel>
                                </Border>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="View:ReportViewer">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="View:ReportViewer">
                    <Grid>
                        <Grid.Resources>
                            <Converters:ColorToBrushConverter x:Key="ColorToBrushConverter" />
                            <ViewModel:VisibilityConverter x:Key="VisibilityConverter" />
                            <Converters:ViewTypeVisibilityConverter x:Key="ViewTypeVisibilityConverter" />
                        </Grid.Resources>
                        <!--  single page view container  -->
                        <View:SinglePageViewer
                            x:Name="SinglePageViewer"
                            AutomationProperties.AutomationId="SinglePageViewer"
                            DataContext="{Binding SinglePageViewModel}"
                            PageView="{Binding PageView}"
                            Visibility="{Binding ViewType, Converter={StaticResource ViewTypeVisibilityConverter}, ConverterParameter=SinglePage}" />
                        <Border
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Background="{Binding GrayedAreaColor, Converter={StaticResource ColorToBrushConverter}}"
                            BorderThickness="0"
                            IsHitTestVisible="False"
                            Visibility="{Binding IsActive, Converter={StaticResource VisibilityConverter}, ConverterParameter=Collapsed}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  Zoomable view template  -->
    <Style TargetType="View:ZoomView">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="View:ZoomView">
                    <ScrollViewer x:Name="ScrollView">
                        <Grid
                            x:Name="Grid"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">
                            <ContentPresenter
                                x:Name="Presenter"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}" />
                        </Grid>
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  single page view container  -->
    <Style TargetType="View:SinglePageViewer">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="View:SinglePageViewer">
                    <Grid Background="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}">
                        <Grid.Resources>
                            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
                            <AR:LocalResources x:Key="res" />
                            <Converters:ColorToBrushConverter x:Key="ColorToBrushConverter" />
                            <Converters:PageViewToCanvasConverter x:Key="PageViewToCanvasConverter" />
                            <Converters:ResourceImageConverter x:Key="ResourceImageConverter" />
                            <Converters:ViewTypeBooleanConverter x:Key="ViewTypeBooleanConverter" />
                        </Grid.Resources>
                        <View:ZoomView
                            x:Name="ZoomView"
                            HorizontalPadding="16"
                            IsEnabled="{Binding ViewType, Converter={StaticResource ViewTypeBooleanConverter}, ConverterParameter=SinglePage}"
                            ItemSize="{Binding PageViewSize, RelativeSource={RelativeSource AncestorType=View:SinglePageViewer}}"
                            VerticalPadding="16"
                            Zoom="{Binding Zoom, Mode=TwoWay}"
                            ZoomMode="{Binding ZoomMode, Mode=OneWay}">
                            <Grid>
                                <Border
                                    x:Name="PageBorder"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    AutomationProperties.AutomationId="SinglePagePageContainer"
                                    Background="{Binding PaperColor, Converter={StaticResource ColorToBrushConverter}}"
                                    BorderBrush="Black"
                                    BorderThickness="{Binding PageBorderThickness, RelativeSource={RelativeSource AncestorType=View:SinglePageViewer}}"
                                    Visibility="{Binding IsUIEnabled, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <Grid>
                                        <ContentControl x:Name="Content">
                                            <ContentControl.Content>
                                                <MultiBinding Converter="{StaticResource PageViewToCanvasConverter}">
                                                    <Binding Path="PageView" />
                                                    <Binding Path="RenderContext" RelativeSource="{RelativeSource AncestorType=View:SinglePageViewer}" />
                                                    <Binding />
                                                </MultiBinding>
                                            </ContentControl.Content>
                                        </ContentControl>
                                        <ContentControl x:Name="HighlightPage" />
                                    </Grid>
                                </Border>
                            </Grid>
                        </View:ZoomView>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="View:ThumbnailView">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="View:ThumbnailView">
                    <Border
                        x:Name="ThumbnailBorder"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        BorderThickness="1">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="Transparent" />
                        </Border.BorderBrush>
                        <Border.Background>
                            <SolidColorBrush Color="Transparent" />
                        </Border.Background>
                        <Border.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=View:ThumbnailView}}" Value="True">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ColorAnimation
                                                        Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                        To="{x:Static SystemColors.HighlightColor}"
                                                        Duration="0:0:0.1" />
                                                    <ColorAnimation
                                                        Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                        To="{x:Static SystemColors.HighlightColor}"
                                                        Duration="0:0:0.1" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                        <DataTrigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ColorAnimation
                                                        Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                        To="Transparent"
                                                        Duration="0:0:0.1" />
                                                    <ColorAnimation
                                                        Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                        To="Transparent"
                                                        Duration="0:0:0.1" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.ExitActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <StackPanel
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Orientation="Vertical">
                            <Border
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Background="{Binding PaperBrush, RelativeSource={RelativeSource AncestorType=View:ThumbnailView}}"
                                BorderBrush="Black"
                                BorderThickness="1">
                                <Image
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    AutomationProperties.AutomationId="ThumbnailImage"
                                    SnapsToDevicePixels="True"
                                    Source="{Binding Image}" />
                            </Border>
                            <TextBlock
                                Height="14"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Center"
                                Text="{Binding Caption}"
                                TextAlignment="Center">
                                <TextBlock.Foreground>
                                    <SolidColorBrush Color="{x:Static SystemColors.ControlTextColor}" />
                                </TextBlock.Foreground>
                                <TextBlock.Style>
                                    <Style>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=View:ThumbnailView}}" Value="True">
                                                <DataTrigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ColorAnimation
                                                                Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                                                To="{x:Static SystemColors.HighlightTextColor}"
                                                                Duration="0:0:0.1" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.EnterActions>
                                                <DataTrigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ColorAnimation
                                                                Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                                                To="{x:Static SystemColors.ControlTextColor}"
                                                                Duration="0:0:0.1" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.ExitActions>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  Thumbnail panel template  -->
    <Style TargetType="View:ThumbnailPanel">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="View:ThumbnailPanel">
                    <DockPanel>
                        <DockPanel.Resources>
                            <AR:LocalResources x:Key="res" />
                            <Converters:ResourceImageConverter x:Key="ResourceImageConverter" />
                            <Converters:CommandConverter x:Key="CommandConverter" />
                            <Converters:ThumbnailItemCollectionConverter x:Key="ThumbnailItemCollectionConverter" />
                            <Converters:SizeConverter x:Key="SizeConverter" />
                            <Converters:ColorToBrushConverter x:Key="ColorToBrushConverter" />
                            <Style x:Key="ToolButtonImage" TargetType="Image">
                                <Setter Property="HorizontalAlignment" Value="Center" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="RenderOptions.BitmapScalingMode" Value="Fant" />
                                <Setter Property="FlowDirection" Value="LeftToRight" />
                            </Style>
                            <Style x:Key="ToolButton" TargetType="ButtonBase">
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Opacity" Value="0.5" />
                                    </Trigger>
                                </Style.Triggers>
                                <Setter Property="Margin" Value="1" />
                                <Setter Property="Width" Value="24" />
                                <Setter Property="Height" Value="24" />
                                <Setter Property="BorderThickness" Value="1" />
                                <Setter Property="BorderBrush" Value="Transparent" />
                                <Setter Property="Background" Value="Transparent" />
                            </Style>
                        </DockPanel.Resources>
                        <WrapPanel DockPanel.Dock="Top" Orientation="Horizontal">
                            <Button
                                AutomationProperties.AutomationId="ZoomOutSidebarButton"
                                Command="{Binding ZoomOut, Converter={StaticResource CommandConverter}}"
                                Style="{StaticResource ToolButton}">
                                <Image
                                    Margin="1,0"
                                    SnapsToDevicePixels="True"
                                    Source="{Binding Source={StaticResource res}, Converter={StaticResource ResourceImageConverter}, Path=Resources.CmdIcon_zoomout}"
                                    Style="{StaticResource ToolButtonImage}" />
                            </Button>
                            <Button
                                AutomationProperties.AutomationId="ZoomInSidebarButton"
                                Command="{Binding ZoomIn, Converter={StaticResource CommandConverter}}"
                                Style="{StaticResource ToolButton}">
                                <Image
                                    Margin="1,0"
                                    SnapsToDevicePixels="True"
                                    Source="{Binding Source={StaticResource res}, Converter={StaticResource ResourceImageConverter}, Path=Resources.CmdIcon_zoomin}"
                                    Style="{StaticResource ToolButtonImage}" />
                            </Button>
                        </WrapPanel>
                        <ScrollViewer
                            Name="Scroll"
                            CanContentScroll="True"
                            HorizontalScrollBarVisibility="Auto"
                            IsDeferredScrollingEnabled="True"
                            VerticalScrollBarVisibility="Auto">
                            <Framework:Setup.Behaviors>
                                <fwi:ThumbnailsNavigationBehavior />
                            </Framework:Setup.Behaviors>
                            <MultiPage:VirtualViewsControl
                                x:Name="Views"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                HorizontalPadding="10"
                                ItemSize="{Binding MaxPageSize, Converter={StaticResource SizeConverter}}"
                                Pages="{Binding Pages, Converter={StaticResource ThumbnailItemCollectionConverter}}"
                                SelectedIndex="{Binding CurrentPageIndex, Mode=TwoWay}"
                                VerticalPadding="24"
                                ViewMode="Wrap"
                                Zoom="{Binding ZoomValue}">
                                <MultiPage:VirtualViewsControl.ItemTemplate>
                                    <ControlTemplate>
                                        <View:ThumbnailView
                                            Margin="3"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            PaperBrush="{Binding DataContext.PaperColor, Converter={StaticResource ColorToBrushConverter}, RelativeSource={RelativeSource AncestorType=MultiPage:VirtualViewsControl}}" />
                                    </ControlTemplate>
                                </MultiPage:VirtualViewsControl.ItemTemplate>
                            </MultiPage:VirtualViewsControl>
                        </ScrollViewer>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="View:TocPanel">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="View:TocPanel">
                    <TreeView
                        x:Name="TreeView"
                        fwi:TreeViewHelper.SelectedItem="{Binding SelectedNode, Mode=TwoWay}"
                        ItemsSource="{Binding Bookmarks.Nodes, Mode=OneWay}">
                        <Framework:Setup.Behaviors>
                            <fwi:MapTreeSelectedItem />
                        </Framework:Setup.Behaviors>
                        <TreeView.ItemContainerStyle>
                            <Style>
                                <Setter Property="TreeViewItem.IsExpanded" Value="{Binding Path=DataContext.Expanded, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=View:TocPanel}, Mode=OneWay}" />
                            </Style>
                        </TreeView.ItemContainerStyle>
                        <TreeView.ItemTemplate>
                            <HierarchicalDataTemplate DataType="model:TocTreeNode" ItemsSource="{Binding Nodes}">
                                <TextBlock Text="{Binding Path=Bookmark.Name}" />
                            </HierarchicalDataTemplate>
                        </TreeView.ItemTemplate>
                    </TreeView>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="View:SearchPanel">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="View:SearchPanel">
                    <DockPanel Margin="4,0" LastChildFill="True">
                        <DockPanel.Resources>
                            <AR:LocalResources x:Key="res" />
                            <Converters:CommandConverter x:Key="CommandConverter" />
                            <Converters:SearchResultCollectionConverter x:Key="SearchResultCollectionConverter" />
                            <Converters:CommandAdapter x:Key="FindAll" Command="{Binding FindAll}" />
                            <Converters:FindStatusToMessageVisibilityConverter x:Key="FindStatusToMessageVisibilityConverter" />
                        </DockPanel.Resources>
                        <TextBlock
                            DockPanel.Dock="Top"
                            Text="{Binding Source={StaticResource res}, Path=Resources.SearchPanel_SearchQuestion}"
                            TextWrapping="Wrap" />
                        <TextBox
                            Height="24"
                            VerticalAlignment="Top"
                            AutomationProperties.AutomationId="SearchQueryTextBox"
                            DockPanel.Dock="Top"
                            Text="{Binding SearchString, Mode=TwoWay}"
                            TextWrapping="NoWrap">
                            <Framework:Setup.Behaviors>
                                <fwi:UpdateSourceOnKeyPress UpdateOn="AnyKey" />
                            </Framework:Setup.Behaviors>
                            <TextBox.InputBindings>
                                <KeyBinding Key="Enter" Command="{StaticResource FindAll}" />
                            </TextBox.InputBindings>
                        </TextBox>
                        <TextBlock
                            Margin="0,10,0,0"
                            DockPanel.Dock="Top"
                            Text="{Binding Source={StaticResource res}, Path=Resources.SearchPanel_AdditionalCriteria}"
                            TextWrapping="Wrap" />
                        <CheckBox
                            Margin="4"
                            AutomationProperties.AutomationId="WholeWordOnlyCheckBox"
                            Content="{Binding Source={StaticResource res}, Path=Resources.SearchPanel_WhileWord}"
                            DockPanel.Dock="Top"
                            IsChecked="{Binding MatchWholeWord, Mode=TwoWay}" />
                        <CheckBox
                            Margin="4"
                            AutomationProperties.AutomationId="MatchCaseCheckBox"
                            Content="{Binding Source={StaticResource res}, Path=Resources.SearchPanel_MatchCase}"
                            DockPanel.Dock="Top"
                            IsChecked="{Binding MatchCase, Mode=TwoWay}" />
                        <TextBlock
                            DockPanel.Dock="Top"
                            Text="{Binding Source={StaticResource res}, Path=Resources.SearchPanel_FindResults}"
                            TextWrapping="Wrap" />
                        <StackPanel
                            DockPanel.Dock="Bottom"
                            FlowDirection="RightToLeft"
                            Orientation="Horizontal">
                            <Button
                                Width="64"
                                Margin="4"
                                AutomationProperties.AutomationId="ClearButton"
                                Command="{Binding Clear, Converter={StaticResource CommandConverter}}"
                                Content="{Binding Source={StaticResource res}, Path=Resources.SearchPanel_ClearButton}" />
                            <Button
                                Width="64"
                                Margin="4"
                                AutomationProperties.AutomationId="SearchButton"
                                Command="{StaticResource FindAll}"
                                Content="{Binding Source={StaticResource res}, Path=Resources.SearchPanel_SearchButton}" />
                        </StackPanel>
                        <Grid>
                            <ListBox
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                AutomationProperties.AutomationId="SearchResultsList"
                                DisplayMemberPath="Text"
                                ItemsSource="{Binding SearchResults, Converter={StaticResource SearchResultCollectionConverter}}"
                                SelectedIndex="{Binding CurrentSearchResultIndex, Mode=TwoWay}" />
                            <TextBlock
                                Padding="4,4,4,4"
                                Text="{Binding Source={StaticResource res}, Path=Resources.SearchPane_NothingFound}"
                                TextAlignment="Center"
                                TextWrapping="Wrap"
                                Visibility="{Binding Status, Converter={StaticResource FindStatusToMessageVisibilityConverter}, Mode=OneWay}" />
                        </Grid>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="View:ParametersPanel">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="View:ParametersPanel">
                    <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                        <ScrollViewer.Resources>
                            <AR:LocalResources x:Key="res" />
                            <Converters:ParameterTypeToVisibilityConverter x:Key="ParameterTypeToVisibilityConverter" />
                            <Converters:ParameterViewToVisibilityConverter x:Key="ParameterViewToVisibilityConverter" />
                            <Converters:NegateConverter x:Key="NegateConverter" />
                            <Converters:CommandAdapter x:Key="RefreshReport" Command="{Binding RefreshReport}" />
                        </ScrollViewer.Resources>
                        <StackPanel>
                            <ItemsControl MinWidth="170" ItemsSource="{Binding Params}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="vertical">
                                            <!--  caption  -->
                                            <TextBlock Text="{Binding Prompt, Mode=OneWay}" TextWrapping="Wrap" />
                                            <!--  parameter editor  -->
                                            <View:MultivalueParameterEditor Visibility="{Binding ., Mode=OneWay, Converter={StaticResource ParameterViewToVisibilityConverter}, ConverterParameter=multivalueEditor}" />
                                            <View:MultilineParameterEditor Visibility="{Binding ., Mode=OneWay, Converter={StaticResource ParameterViewToVisibilityConverter}, ConverterParameter=multilineEditor}" />
                                            <View:ListParameterEditor Visibility="{Binding ., Mode=OneWay, Converter={StaticResource ParameterViewToVisibilityConverter}, ConverterParameter=comboBoxEditor}" />
                                            <StackPanel Orientation="Vertical" Visibility="{Binding ., Mode=OneWay, Converter={StaticResource ParameterViewToVisibilityConverter}, ConverterParameter=simpleEditor}">
                                                <View:TextBoxParameterEditor Visibility="{Binding ParameterType, Mode=OneWay, Converter={StaticResource ParameterTypeToVisibilityConverter}, ConverterParameter=textEditor}" />
                                                <View:BooleanParameterEditor Visibility="{Binding ParameterType, Mode=OneWay, Converter={StaticResource ParameterTypeToVisibilityConverter}, ConverterParameter=booleanEditor}" />
                                                <View:DateParameterEditor Visibility="{Binding ParameterType, Mode=OneWay, Converter={StaticResource ParameterTypeToVisibilityConverter}, ConverterParameter=dateEditor}" />
                                            </StackPanel>
                                            <!--  error text  -->
                                            <TextBlock
                                                x:Name="errorTextBox"
                                                Margin="0,5,0,0"
                                                FontSize="10"
                                                Foreground="Red"
                                                Text="{Binding ErrorText, Mode=OneWay}"
                                                TextWrapping="Wrap" />
                                        </StackPanel>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                                <ItemsControl.Template>
                                    <ControlTemplate>
                                        <StackPanel>
                                            <ItemsPresenter />
                                        </StackPanel>
                                    </ControlTemplate>
                                </ItemsControl.Template>
                            </ItemsControl>
                            <Button
                                x:Name="ViewReportButton"
                                Margin="0,8,0,0"
                                Padding="8,2,8,2"
                                HorizontalAlignment="Right"
                                AutomationProperties.AutomationId="ViewReportButton"
                                Command="{StaticResource RefreshReport}"
                                Content="{Binding Source={StaticResource res}, Path=Resources.ParametersPanel_ViewReport}" />
                            <!--  invisible button for focusing  -->
                            <Button
                                x:Name="FocusCatcher"
                                Width="0"
                                Height="0"
                                Background="Transparent" />
                        </StackPanel>
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="View:BooleanParameterEditor">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="View:BooleanParameterEditor">
                    <UserControl IsEnabled="{Binding Enabled, Mode=OneWay}">
                        <UserControl.Resources>
                            <AR:LocalResources x:Key="res" />
                            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
                            <Converters:NegateConverter x:Key="Negate" />
                        </UserControl.Resources>
                        <DockPanel>
                            <RadioButton
                                Margin="0,2,0,2"
                                AutomationProperties.AutomationId="TrueParametersRadioButton"
                                Content="{Binding Source={StaticResource res}, Path=Resources.ParametersPanel_True}"
                                IsChecked="{Binding Value, Mode=TwoWay}"
                                IsEnabled="{Binding IsValueNull, Mode=OneWay, Converter={StaticResource Negate}}" />
                            <RadioButton
                                Margin="5,2,0,2"
                                AutomationProperties.AutomationId="FalseParametersRadioButton"
                                Content="{Binding Source={StaticResource res}, Path=Resources.ParametersPanel_False}"
                                IsChecked="{Binding Value, Mode=TwoWay, Converter={StaticResource Negate}}"
                                IsEnabled="{Binding IsValueNull, Mode=OneWay, Converter={StaticResource Negate}}" />
                            <CheckBox
                                Margin="5,2,5,2"
                                HorizontalAlignment="Right"
                                AutomationProperties.AutomationId="NullParametersCheckBox"
                                Content="{Binding Source={StaticResource res}, Path=Resources.ParametersPanel_Null}"
                                IsChecked="{Binding IsValueNull, Mode=TwoWay}"
                                Visibility="{Binding Nullable, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" />
                        </DockPanel>
                    </UserControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="View:DateParameterEditor">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="View:DateParameterEditor">
                    <UserControl IsEnabled="{Binding Enabled, Mode=OneWay}">
                        <UserControl.Resources>
                            <AR:LocalResources x:Key="res" />
                            <BooleanToVisibilityConverter x:Key="Visibility" />
                            <Converters:NegateConverter x:Key="Negate" />
                        </UserControl.Resources>
                        <DockPanel x:Name="ParentDockPanel">
                            <DatePicker
                                x:Name="DatePicker"
                                Margin="0,5,0,0"
                                AutomationProperties.AutomationId="DatePicker"
                                IsEnabled="{Binding ValueEnabled, Mode=OneWay}"
                                SelectedDate="{Binding Value, Mode=TwoWay}"
                                SelectedDateFormat="Long" />
                            <CheckBox
                                Margin="5,5,5,0"
                                AutomationProperties.AutomationId="NullParametersCheckBox"
                                Content="{Binding Source={StaticResource res}, Path=Resources.ParametersPanel_Null}"
                                DockPanel.Dock="Right"
                                IsChecked="{Binding IsValueNull, Mode=TwoWay}"
                                Visibility="{Binding Nullable, Mode=OneWay, Converter={StaticResource Visibility}}" />
                        </DockPanel>
                    </UserControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="View:ListParameterEditor">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="View:ListParameterEditor">
                    <UserControl IsEnabled="{Binding Enabled, Mode=OneWay}">
                        <UserControl.Resources>
                            <AR:LocalResources x:Key="res" />
                            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
                            <Converters:NegateConverter x:Key="Negate" />
                        </UserControl.Resources>
                        <DockPanel>
                            <CheckBox
                                Margin="5,5,5,0"
                                Content="{Binding Source={StaticResource res}, Path=Resources.ParametersPanel_Null}"
                                DockPanel.Dock="Right"
                                IsChecked="{Binding IsValueNull, Mode=TwoWay}"
                                Visibility="{Binding Nullable, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" />
                            <ComboBox
                                Margin="0,5,0,0"
                                AutomationProperties.AutomationId="ParameterCombobox"
                                DisplayMemberPath="Label"
                                IsEnabled="{Binding ValueEnabled, Mode=OneWay}"
                                ItemsSource="{Binding Options, Mode=OneWay}"
                                SelectedValue="{Binding Value, Mode=TwoWay}"
                                SelectedValuePath="Value" />
                        </DockPanel>
                    </UserControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  copy of TextBoxParameterEditor with a couple extra settings  -->
    <Style TargetType="View:MultilineParameterEditor">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="View:MultilineParameterEditor">
                    <UserControl Height="100" IsEnabled="{Binding Enabled, Mode=OneWay}">
                        <UserControl.Resources>
                            <AR:LocalResources x:Key="res" />
                            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
                            <Converters:NegateConverter x:Key="Negate" />
                        </UserControl.Resources>
                        <DockPanel>
                            <CheckBox
                                Margin="5,5,5,0"
                                Content="{Binding Source={StaticResource res}, Path=Resources.ParametersPanel_Null}"
                                DockPanel.Dock="Right"
                                IsChecked="{Binding IsValueNull, Mode=TwoWay}"
                                Visibility="{Binding Nullable, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" />
                            <TextBox
                                Margin="0,5,0,0"
                                AcceptsReturn="True"
                                AutomationProperties.AutomationId="MultilineParameterTextBox"
                                IsEnabled="{Binding IsValueNull, Mode=OneWay, Converter={StaticResource Negate}}"
                                Text="{Binding StringValue, Mode=TwoWay, NotifyOnValidationError=True, ValidatesOnExceptions=True}"
                                TextWrapping="Wrap"
                                VerticalScrollBarVisibility="Auto" />
                        </DockPanel>
                    </UserControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="View:MultivalueParameterEditor">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="View:MultivalueParameterEditor">
                    <UserControl MaxHeight="100" IsEnabled="{Binding Enabled, Mode=OneWay}">
                        <ListBox
                            x:Name="OptionsBox"
                            Margin="0,5,0,0"
                            AutomationProperties.AutomationId="MultivalueParametersList"
                            BorderThickness="1"
                            ItemsSource="{Binding Options, Mode=OneWay}"
                            SelectionMode="Single">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <CheckBox
                                        Content="{Binding Label, Mode=OneWay}"
                                        IsChecked="{Binding Selected, Mode=TwoWay}"
                                        ToolTip="{Binding Label, Mode=OneWay}" />
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </UserControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="View:TextBoxParameterEditor">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="View:TextBoxParameterEditor">
                    <UserControl IsEnabled="{Binding Enabled, Mode=OneWay}">
                        <UserControl.Resources>
                            <AR:LocalResources x:Key="res" />
                            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
                            <Converters:NegateConverter x:Key="Negate" />
                        </UserControl.Resources>
                        <DockPanel>
                            <CheckBox
                                Margin="5,5,5,0"
                                Content="{Binding Source={StaticResource res}, Path=Resources.ParametersPanel_Null}"
                                DockPanel.Dock="Right"
                                IsChecked="{Binding IsValueNull, Mode=TwoWay}"
                                Visibility="{Binding Nullable, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" />
                            <TextBox
                                Margin="0,5,0,0"
                                AutomationProperties.AutomationId="TextBoxParameter"
                                IsEnabled="{Binding ValueEnabled}"
                                Text="{Binding StringValue, Mode=TwoWay, NotifyOnValidationError=True, ValidatesOnExceptions=True}"
                                TextWrapping="Wrap" />
                        </DockPanel>
                    </UserControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="View:LoadingReportBanner">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="View:LoadingReportBanner">
                    <Grid Background="White">
                        <Grid.Resources>
                            <AR:LocalResources x:Key="res" />
                        </Grid.Resources>
                        <!--  floating message please wait  -->
                        <Border
                            x:Name="WaitMessageBox"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Background="Transparent"
                            BorderThickness="0">
                            <toolkit:GifImage
                                x:Name="WaitMessageElement"
                                Width="184"
                                Height="204"
                                GifSource="{Binding Source={StaticResource res}, Path=Resources.WaitNotification}"
                                IsHitTestVisible="False" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="View:MainToolbar">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="View:MainToolbar">
                    <ToolBarTray IsLocked="True">
                        <ToolBar IsEnabled="{Binding IsUIEnabled, Mode=OneWay}">
                            <ToolBar.Resources>
                                <!--  globals  -->
                                <Converters:CommandConverter x:Key="CommandConverter" />
                                <Converters:ResourceImageConverter x:Key="ResourceImageConverter" />
                                <AR:LocalResources x:Key="res" />
                                <ViewModel:VisibilityConverter x:Key="VisibilityConverter" />
                                <!--  Toolbar style  -->
                                <Style x:Key="ToolButton" TargetType="ButtonBase">
                                    <Style.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Opacity" Value="0.5" />
                                        </Trigger>
                                    </Style.Triggers>
                                    <Setter Property="Margin" Value="1" />
                                    <Setter Property="Width" Value="22" />
                                    <Setter Property="Height" Value="22" />
                                    <Setter Property="BorderThickness" Value="1" />
                                    <Setter Property="BorderBrush" Value="Transparent" />
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
                                </Style>
                                <Style x:Key="DropDownButton" TargetType="ToggleButton">
                                    <Style.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Opacity" Value="0.5" />
                                        </Trigger>
                                    </Style.Triggers>
                                    <Setter Property="Margin" Value="1" />
                                    <Setter Property="Width" Value="38" />
                                    <Setter Property="Height" Value="22" />
                                    <Setter Property="BorderThickness" Value="1" />
                                    <Setter Property="BorderBrush" Value="Transparent" />
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
                                </Style>
                                <Style x:Key="ToolButtonImage" TargetType="Image">
                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                    <Setter Property="Width" Value="16" />
                                    <Setter Property="Height" Value="16" />
                                    <Setter Property="RenderOptions.BitmapScalingMode" Value="Fant" />
                                    <Setter Property="FlowDirection" Value="LeftToRight" />
                                </Style>
                                <Style x:Key="PageNumberBox" TargetType="TextBox">
                                    <Setter Property="Margin" Value="4,0" />
                                    <Setter Property="Padding" Value="1" />
                                    <Setter Property="Width" Value="90" />
                                    <Setter Property="HorizontalAlignment" Value="Left" />
                                </Style>
                            </ToolBar.Resources>
                            <!--  Sidebar button  -->
                            <ToggleButton
                                Name="buttonToggleSidebar"
                                AutomationProperties.AutomationId="ToogleSidebarButton"
                                IsChecked="{Binding SidebarVisible, Mode=TwoWay}"
                                IsEnabled="{Binding IsUIEnabled, Mode=OneWay}"
                                Style="{StaticResource ToolButton}"
                                ToolTipService.ToolTip="{Binding Source={StaticResource res}, Path=Resources.ToolbarTooltip_ToggleSidebar}">
                                <Image Source="{Binding Source={StaticResource res}, Converter={StaticResource ResourceImageConverter}, Path=Resources.CmdIcon_toc}" Style="{StaticResource ToolButtonImage}" />
                            </ToggleButton>
                            <Separator Name="PrintGroupSeparator" />
                            <!--  Print button  -->
                            <Button
                                Name="PrintButton"
                                AutomationProperties.AutomationId="PrintButton"
                                Command="{Binding Print, Converter={StaticResource CommandConverter}}"
                                Style="{StaticResource ToolButton}"
                                ToolTipService.ToolTip="{Binding Source={StaticResource res}, Path=Resources.ToolbarTooltip_Print}">
                                <Image Source="{Binding Source={StaticResource res}, Converter={StaticResource ResourceImageConverter}, Path=Resources.CmdIcon_print}" Style="{StaticResource ToolButtonImage}" />
                            </Button>
                            <Button
                                x:Name="PdfButton"
                                AutomationProperties.AutomationId="PdfButton"
                                Command="{StaticResource PdfCommand}"
                                CommandParameter="{Binding ElementName=ViewReportViewer}"
                                Style="{StaticResource ToolButton}"
                                ToolTipService.ToolTip="PDF出力">
                                <Image Source="{StaticResource PdfIcon}" Style="{StaticResource ToolButtonImage}" />
                            </Button>

                            <ToggleButton
                                Name="GalleyModeButton"
                                AutomationProperties.AutomationId="GalleyModeButton"
                                Command="{Binding SetGalleyMode, Converter={StaticResource CommandConverter}}"
                                IsChecked="{Binding GalleyMode, Mode=OneWay}"
                                Style="{StaticResource ToolButton}"
                                ToolTipService.ToolTip="{Binding Source={StaticResource res}, Path=Resources.ToolbarTooltip_GalleyMode}">
                                <Image Source="{Binding Source={StaticResource res}, Converter={StaticResource ResourceImageConverter}, Path=Resources.CmdIcon_GalleyMode}" Style="{StaticResource ToolButtonImage}" />
                            </ToggleButton>
                            <Separator />
                            <RadioButton
                                AutomationProperties.AutomationId="ToolBarFindButton"
                                GroupName="SidebarActivePane"
                                IsChecked="{Binding SidebarSearchPaneActive, Mode=TwoWay}"
                                IsEnabled="{Binding IsUIEnabled, Mode=OneWay}"
                                Style="{StaticResource ToolButton}"
                                ToolTipService.ToolTip="{Binding Source={StaticResource res}, Path=Resources.ToolbarTooltip_Find}">
                                <Image Source="{Binding Source={StaticResource res}, Converter={StaticResource ResourceImageConverter}, Path=Resources.CmdIcon_search}" Style="{StaticResource ToolButtonImage}" />
                            </RadioButton>
                            <!--  zoom commands group  -->
                            <Separator Name="ZoomGroupSeparator" />
                            <!--  ZoomOut button  -->
                            <Button
                                AutomationProperties.AutomationId="ZoomOutButton"
                                Command="{Binding ZoomOut, Converter={StaticResource CommandConverter}}"
                                Style="{StaticResource ToolButton}"
                                ToolTipService.ToolTip="{Binding Source={StaticResource res}, Path=Resources.ToolbarTooltip_ZoomOut}">
                                <Image
                                    Margin="1,0"
                                    Source="{Binding Source={StaticResource res}, Converter={StaticResource ResourceImageConverter}, Path=Resources.CmdIcon_zoomout}"
                                    Style="{StaticResource ToolButtonImage}" />
                            </Button>
                            <!--  ZoomIn btn  -->
                            <Button
                                AutomationProperties.AutomationId="ZoomInButton"
                                Command="{Binding ZoomIn, Converter={StaticResource CommandConverter}}"
                                Style="{StaticResource ToolButton}"
                                ToolTipService.ToolTip="{Binding Source={StaticResource res}, Path=Resources.ToolbarTooltip_ZoomIn}">
                                <Image
                                    Margin="1,0"
                                    Source="{Binding Source={StaticResource res}, Converter={StaticResource ResourceImageConverter}, Path=Resources.CmdIcon_zoomin}"
                                    Style="{StaticResource ToolButtonImage}" />
                            </Button>
                            <!--  Zoom combobox  -->
                            <View:ZoomComboBox
                                AutomationProperties.AutomationId="ZoomComboBox"
                                ToolTip="{Binding Source={StaticResource res}, Path=Resources.ToolbarTooltip_ZoomValue}"
                                ZoomMode="{Binding ZoomMode, Mode=TwoWay}"
                                Value="{Binding ZoomDoubleValue, Mode=TwoWay}" />
                            <!--  /end of zoom commands group  -->
                            <Separator />
                            <!--  FitWidth btn  -->
                            <ToggleButton
                                AutomationProperties.AutomationId="FitPageWidthButton"
                                IsChecked="{Binding IsFitWidth, Mode=TwoWay}"
                                IsEnabled="{Binding IsUIEnabled, Mode=OneWay}"
                                Style="{StaticResource ToolButton}"
                                ToolTipService.ToolTip="{Binding Source={StaticResource res}, Path=Resources.ToolbarTooltip_FitPageWidth}">
                                <Image Source="{Binding Source={StaticResource res}, Converter={StaticResource ResourceImageConverter}, Path=Resources.CmdIcon_fitWidth}" Style="{StaticResource ToolButtonImage}" />
                            </ToggleButton>
                            <!--  FitPage btn  -->
                            <ToggleButton
                                AutomationProperties.AutomationId="FitWholePageButton"
                                IsChecked="{Binding IsFitPage, Mode=TwoWay}"
                                IsEnabled="{Binding IsUIEnabled, Mode=OneWay}"
                                Style="{StaticResource ToolButton}"
                                ToolTipService.ToolTip="{Binding Source={StaticResource res}, Path=Resources.ToolbarTooltip_FitWholePage}">
                                <Image Source="{Binding Source={StaticResource res}, Converter={StaticResource ResourceImageConverter}, Path=Resources.CmdIcon_fitPage}" Style="{StaticResource ToolButtonImage}" />
                            </ToggleButton>
                            <!--  Page navigation commands  -->
                            <Separator Name="PageGroupSeparator" />
                            <!--  FirstPage btn  -->
                            <Button
                                AutomationProperties.AutomationId="FirstPageButton"
                                Command="{Binding GoFirstPage, Converter={StaticResource CommandConverter}}"
                                Style="{StaticResource ToolButton}"
                                ToolTipService.ToolTip="{Binding Source={StaticResource res}, Path=Resources.ToolbarTooltip_FirstPage}">
                                <Image Source="{Binding Source={StaticResource res}, Converter={StaticResource ResourceImageConverter}, Path=Resources.CmdIcon_firstpage}" Style="{StaticResource ToolButtonImage}" />
                            </Button>
                            <!--  PreviousPage btn  -->
                            <Button
                                AutomationProperties.AutomationId="PreviousPageButton"
                                Command="{Binding GoPreviousPage, Converter={StaticResource CommandConverter}}"
                                Style="{StaticResource ToolButton}"
                                ToolTipService.ToolTip="{Binding Source={StaticResource res}, Path=Resources.ToolbarTooltip_PreviousPage}">
                                <Image Source="{Binding Source={StaticResource res}, Converter={StaticResource ResourceImageConverter}, Path=Resources.CmdIcon_previouspage}" Style="{StaticResource ToolButtonImage}" />
                            </Button>
                            <!--  CurrentPage textbox  -->
                            <TextBox
                                Name="CurPageTextArea"
                                VerticalAlignment="Center"
                                AutomationProperties.AutomationId="CurrentPageTextBox"
                                IsEnabled="{Binding IsUIEnabled, Mode=OneWay}"
                                Style="{StaticResource PageNumberBox}"
                                Text="{Binding CurrentPageAndCount, Mode=TwoWay}"
                                TextAlignment="Center"
                                ToolTipService.ToolTip="{Binding Source={StaticResource res}, Path=Resources.ToolbarTooltip_CurrentPageNumber}">
                                <Framework:Setup.Behaviors>
                                    <fwi:UpdateSourceOnKeyPress UpdateOn="EnterKey" />
                                </Framework:Setup.Behaviors>
                            </TextBox>
                            <!--  NextPage btn  -->
                            <Button
                                AutomationProperties.AutomationId="NextPageButton"
                                Command="{Binding GoNextPage, Converter={StaticResource CommandConverter}}"
                                Style="{StaticResource ToolButton}"
                                ToolTipService.ToolTip="{Binding Source={StaticResource res}, Path=Resources.ToolbarTooltip_NextPage}">
                                <Image Source="{Binding Source={StaticResource res}, Converter={StaticResource ResourceImageConverter}, Path=Resources.CmdIcon_nextpage}" Style="{StaticResource ToolButtonImage}" />
                            </Button>
                            <!--  LastPage btn  -->
                            <Button
                                AutomationProperties.AutomationId="LastPageButton"
                                Command="{Binding GoLastPage, Converter={StaticResource CommandConverter}}"
                                Style="{StaticResource ToolButton}"
                                ToolTipService.ToolTip="{Binding Source={StaticResource res}, Path=Resources.ToolbarTooltip_LastPage}">
                                <Image Source="{Binding Source={StaticResource res}, Converter={StaticResource ResourceImageConverter}, Path=Resources.CmdIcon_lastpage}" Style="{StaticResource ToolButtonImage}" />
                            </Button>
                            <!--  /end of page navigation commands  -->
                            <Separator Name="NavigationGroupSeparator" />
                            <!--  HistoryBack btn  -->
                            <Button
                                AutomationProperties.AutomationId="HistoryBackButton"
                                Command="{Binding GoHistoryBack, Converter={StaticResource CommandConverter}}"
                                Style="{StaticResource ToolButton}"
                                ToolTipService.ToolTip="{Binding Source={StaticResource res}, Path=Resources.ToolbarTooltip_Backward}">
                                <Image Source="{Binding Source={StaticResource res}, Converter={StaticResource ResourceImageConverter}, Path=Resources.CmdIcon_Backward}" Style="{StaticResource ToolButtonImage}" />
                            </Button>
                            <!--  HistoryNext btn  -->
                            <Button
                                AutomationProperties.AutomationId="HistoryNextButton"
                                Command="{Binding GoHistoryNext, Converter={StaticResource CommandConverter}}"
                                Style="{StaticResource ToolButton}"
                                ToolTipService.ToolTip="{Binding Source={StaticResource res}, Path=Resources.ToolbarTooltip_Forward}">
                                <Image Source="{Binding Source={StaticResource res}, Converter={StaticResource ResourceImageConverter}, Path=Resources.CmdIcon_forward}" Style="{StaticResource ToolButtonImage}" />
                            </Button>
                            <Separator Name="DrillthroughNavigationGroupSeparator" Visibility="{Binding AllowBackToParent, Mode=OneWay, Converter={StaticResource VisibilityConverter}}" />
                            <!--  BackToParent btn  -->
                            <Button
                                AutomationProperties.AutomationId="BackToParentReportButton"
                                Command="{Binding BackToParentReport, Converter={StaticResource CommandConverter}}"
                                Style="{StaticResource ToolButton}"
                                ToolTipService.ToolTip="{Binding Source={StaticResource res}, Path=Resources.ToolbarTooltip_BackToParentReport}"
                                Visibility="{Binding AllowBackToParent, Mode=OneWay, Converter={StaticResource VisibilityConverter}}">
                                <Image Source="{Binding Source={StaticResource res}, Converter={StaticResource ResourceImageConverter}, Path=Resources.CmdIcon_BackToParent}" Style="{StaticResource ToolButtonImage}" />
                            </Button>
                            <Separator />
                            <!--  Refresh btn  -->
                            <Button
                                AutomationProperties.AutomationId="RefreshButton"
                                Command="{Binding RefreshReport, Converter={StaticResource CommandConverter}}"
                                Style="{StaticResource ToolButton}"
                                ToolTipService.ToolTip="{Binding Source={StaticResource res}, Path=Resources.ToolbarTooltip_Refresh}"
                                Visibility="{Binding AllowCancel, Mode=OneWay, Converter={StaticResource VisibilityConverter}, ConverterParameter=Collapsed}">
                                <Image Source="{Binding Source={StaticResource res}, Converter={StaticResource ResourceImageConverter}, Path=Resources.CmdIcon_Refresh}" Style="{StaticResource ToolButtonImage}" />
                            </Button>
                            <!--  Cancel btn  -->
                            <Button
                                AutomationProperties.AutomationId="CancelButton"
                                Command="{Binding CancelLoading, Converter={StaticResource CommandConverter}}"
                                Style="{StaticResource ToolButton}"
                                ToolTipService.ToolTip="{Binding Source={StaticResource res}, Path=Resources.ToolbarTooltip_Cancel}"
                                Visibility="{Binding AllowCancel, Mode=OneWay, Converter={StaticResource VisibilityConverter}}">
                                <Image Source="{Binding Source={StaticResource res}, Converter={StaticResource ResourceImageConverter}, Path=Resources.Close}" Style="{StaticResource ToolButtonImage}" />
                            </Button>
                        </ToolBar>
                    </ToolBarTray>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  Zoom combobox template  -->
    <Style TargetType="View:ZoomComboBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="View:ZoomComboBox">
                    <ComboBox
                        x:Name="ZoomBox"
                        Height="20"
                        Padding="4,0,3,0"
                        VerticalContentAlignment="Center"
                        IsEditable="True"
                        IsEnabled="{Binding IsUIEnabled, Mode=OneWay}"
                        IsTextSearchEnabled="False" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Converters:NegateConverter x:Key="InverseBoolConverter" />
    <Style TargetType="View:DropDownButton">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="View:DropDownButton">
                    <Grid x:Name="MainGrid" SnapsToDevicePixels="True">
                        <ToggleButton
                            x:Name="PART_DropDownButton"
                            Grid.Column="1"
                            IsChecked="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                            IsHitTestVisible="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBoolConverter}}"
                            Style="{Binding ButtonStyleKey, RelativeSource={RelativeSource TemplatedParent}}">
                            <Grid Background="#01000000">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    RecognizesAccessKey="true" />
                                <Grid
                                    x:Name="arrowGlyph"
                                    Grid.Column="1"
                                    Margin="4,3,2,3"
                                    IsHitTestVisible="False">
                                    <Path
                                        x:Name="Arrow"
                                        Width="7"
                                        Height="4"
                                        Data="M 0,1 C0,1 0,0 0,0 0,0 3,0 3,0 3,0 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 7,0 7,0 7,0 7,1 7,1 7,1 6,1 6,1 6,1 6,2 6,2 6,2 5,2 5,2 5,2 5,3 5,3 5,3 4,3 4,3 4,3 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 3,3 2,3 2,3 2,3 2,2 2,2 2,2 1,2 1,2 1,2 1,1 1,1 1,1 0,1 0,1 z"
                                        Fill="#FF000000" />
                                </Grid>
                            </Grid>
                        </ToggleButton>
                        <Popup
                            x:Name="PART_Popup"
                            AllowsTransparency="True"
                            Focusable="False"
                            HorizontalOffset="1"
                            IsOpen="{Binding IsChecked, ElementName=PART_DropDownButton}"
                            Placement="Bottom"
                            StaysOpen="False"
                            VerticalOffset="1">
                            <Border
                                Background="LightGray"
                                BorderBrush="Black"
                                BorderThickness="1">
                                <ContentPresenter Content="{TemplateBinding DropDownContent}" />
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Arrow" Property="Fill" Value="#AFAFAF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="View:GridSizeEditor">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate x:Name="rootControlTemplate" TargetType="View:GridSizeEditor">
                    <Grid
                        x:Name="RootGrid"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Background="#01000000">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ItemsControl ItemsSource="{Binding Path=Cells, RelativeSource={RelativeSource TemplatedParent}}">
                            <ItemsControl.ItemContainerStyle>
                                <Style TargetType="ContentPresenter">
                                    <Setter Property="Grid.Row" Value="{Binding Row}" />
                                    <Setter Property="Grid.Column" Value="{Binding Column}" />
                                </Style>
                            </ItemsControl.ItemContainerStyle>
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <Grid
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Stretch"
                                        toolkit:GridHelpers.ColumnCount="{Binding Path=MaximumColumnCount, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=View:GridSizeEditor}}"
                                        toolkit:GridHelpers.RowCount="{Binding Path=MaximumRowCount, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=View:GridSizeEditor}}" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Rectangle
                                        x:Name="rect"
                                        Margin="4,4,4,0"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Stretch"
                                        Fill="White"
                                        Stroke="Black" />
                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsHighlighted}" Value="True">
                                            <Setter TargetName="rect" Property="Fill" Value="CornflowerBlue" />
                                        </DataTrigger>
                                        <EventTrigger RoutedEvent="Control.MouseEnter" SourceName="rect">
                                            <EventTrigger.Actions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <BooleanAnimationUsingKeyFrames FillBehavior="HoldEnd" Storyboard.TargetProperty="DataContext.Highlight">
                                                            <DiscreteBooleanKeyFrame KeyTime="0:0:0.0" Value="True" />
                                                        </BooleanAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger.Actions>
                                        </EventTrigger>
                                        <EventTrigger RoutedEvent="Control.MouseDown" SourceName="rect">
                                            <EventTrigger.Actions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <BooleanAnimationUsingKeyFrames FillBehavior="HoldEnd" Storyboard.TargetProperty="DataContext.Selected">
                                                            <DiscreteBooleanKeyFrame KeyTime="0:0:0.0" Value="True" />
                                                        </BooleanAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger.Actions>
                                        </EventTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                        <TextBlock
                            x:Name="HintTextBlock"
                            Grid.Row="1"
                            HorizontalAlignment="Center"
                            Text="{Binding HintText, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="HintTextBlock" Property="Text" Value="Cancel" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>